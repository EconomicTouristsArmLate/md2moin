stages:
  - build
  - push-dev
  - push-int
  - push-ope

build_app:
  stage: build
  tags:
    - aws
    - docker
    - build
  variables:
    PROXY_HOST: ${BUILD_PROXY_HOST}
    PROXY_PORT: ${BUILD_PROXY_PORT}
  image: maven:latest
  script:
    - mvn -Dhttp.proxyHost=${PROXY_HOST} -Dhttp.proxyPort=${PROXY_PORT} -Dhttps.proxyHost=${PROXY_HOST} -Dhttps.proxyPort=${PROXY_PORT} clean package
  artifacts:
    paths:
      - md2moin-web/target
    expire_in: 30 minutes

.build_docker: &build_push_image
  tags:
    - aws
    - docker
    - build
  script:
    - cd md2moin-web
    - $(aws ecr get-login --no-include-email --region eu-west-1)
    - docker build -t ${ECR_REPOSITORY}/md2moin-web .
    - docker push ${ECR_REPOSITORY}/md2moin-web

push_image_dev:
  <<: *build_push_image
  stage: push-dev
  only:
    - develop
  variables:
    AWS_ACCESS_KEY_ID: ${DEV_AWS_ACCESS_KEY}
    AWS_SECRET_ACCESS_KEY: ${DEV_AWS_SECRET_KEY}
    AWS_DEFAULT_REGION: eu-west-1
    ECR_REPOSITORY: ${DEV_ECR_REPO}

push_image_int:
  <<: *build_push_image
  stage: push-int
  only:
    - stage
  variables:
    AWS_ACCESS_KEY_ID: ${INT_AWS_ACCESS_KEY}
    AWS_SECRET_ACCESS_KEY: ${INT_AWS_SECRET_KEY}
    AWS_DEFAULT_REGION: eu-west-1
    ECR_REPOSITORY: ${INT_ECR_REPO}

push_image_ope:
  <<: *build_push_image
  stage: push-ope
  only:
    - master
  variables:
    AWS_ACCESS_KEY_ID: ${OPE_AWS_ACCESS_KEY}
    AWS_SECRET_ACCESS_KEY: ${OPE_AWS_SECRET_KEY}
    AWS_DEFAULT_REGION: eu-west-1
    ECR_REPOSITORY: ${OPE_ECR_REPO}
