# We will use this IAM in the gitlabee pipeline
# Inspirated by https://documentation.codeship.com/basic/continuous-deployment/deployment-to-elastic-beanstalk/
# Unfortunatelly, the user rigths are too strong. I didn't find a way to specify e.g. the name of Beanstalk application
# (e.g. "arn:*:*:*:*:*${AppName}-${AppEnv}*" is not working)
AWSTemplateFormatVersion: 2010-09-09
Description: IAM which is allowed to deploy new version of the application to both beanstalk and to the S3
Parameters:
  AppName:
    Description: App name (lowercase)
    Type: String
  AppEnv:
    Description: Application environment (dev/int/ope)
    Type: String
    AllowedValues:
      - dev
      - int
      - ope
  DeployEnv:
    Description: Deploy environment (int/ope)
    Type: String
    AllowedValues:
      - int
      - ope

Mappings:
  # Certificates must be regional for load balancer
  EnvironmentMap:
    int:
      DomainName: renault-tf-int.com
      DeployRegion: eu-west-1
    ope:
      DomainName: renault-tf.com
      DeployRegion: eu-west-1

Resources:

  ## Deploy S3
  DeployBucket:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: Private
      BucketName:
        !Sub
        - ${AppName}-${AppEnv}-deploy.${Domain}
        - { Domain: !FindInMap [EnvironmentMap, !Ref DeployEnv, DomainName]}
      PublicAccessBlockConfiguration:
        BlockPublicAcls: True
        BlockPublicPolicy: True
        IgnorePublicAcls: True
        RestrictPublicBuckets: True

  ## Deploy IAM
  DeployUser:
    Type: AWS::IAM::User
    Properties:
      UserName: !Sub ${AppName}-${AppEnv}-deploy
      Path: /technical-user/

  DeployUserAccessKey:
    Type: AWS::IAM::AccessKey
    Properties:
      UserName: !Ref DeployUser

  S3Policy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: !Sub ${AppName}-${AppEnv}-s3-deploy
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - s3:ListBucket
            Resource:
              - !Sub
                - arn:aws:s3:::${AppName}-${AppEnv}-deploy.${Domain}
                - { Domain: !FindInMap [EnvironmentMap, !Ref DeployEnv, DomainName]}
          - Effect: Allow
            Action:
              - s3:*
            Resource:
              - !Sub
                - arn:aws:s3:::${AppName}-${AppEnv}-deploy.${Domain}/*
                - { Domain: !FindInMap [EnvironmentMap, !Ref DeployEnv, DomainName]}
      Users:
        - !Ref DeployUser

  DeployBeanstalkPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: !Sub ${AppName}-${AppEnv}-beanstalk-deploy
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action:
              - elasticbeanstalk:CreateApplicationVersion
              - elasticbeanstalk:DescribeEnvironments
              - elasticbeanstalk:DeleteApplicationVersion
              - elasticbeanstalk:DescribeApplicationVersions
              - elasticbeanstalk:UpdateEnvironment
            Effect: Allow
            Resource: "*"
          - Action:
              - sns:CreateTopic
              - sns:GetTopicAttributes
              - sns:ListSubscriptionsByTopic
              - sns:Subscribe
            Effect: Allow
            Resource: !Sub
              - arn:aws:sns:${Region}:*:*
              - { Region: !FindInMap [EnvironmentMap, !Ref DeployEnv, DeployRegion]}
          - Action:
              - autoscaling:SuspendProcesses
              - autoscaling:DescribeScalingActivities
              - autoscaling:ResumeProcesses
              - autoscaling:DescribeAutoScalingGroups
            Effect: Allow
            Resource: "*"
          - Action:
              - cloudformation:GetTemplate
              - cloudformation:DescribeStackResource
              - cloudformation:DescribeStackResources
              - cloudformation:UpdateStack
            Effect: Allow
            Resource: !Sub
              - arn:aws:cloudformation:${Region}:*:*
              - { Region: !FindInMap [EnvironmentMap, !Ref DeployEnv, DeployRegion]}
          - Action:
              - ec2:DescribeImages
              - ec2:DescribeKeyPairs
              - ec2:DescribeSubnets
            Effect: Allow
            Resource: "*"
          - Action:
              - s3:PutObject
              - s3:PutObjectAcl
              - s3:GetObject
              - s3:GetObjectAcl
              - s3:ListBucket
              - s3:DeleteObject
              - s3:GetBucketPolicy
              - s3:CreateBucket
            Effect: Allow
            Resource:
              - !Sub
                - arn:aws:s3:::elasticbeanstalk-${Region}-*
                - { Region: !FindInMap [EnvironmentMap, !Ref DeployEnv, DeployRegion]}
              - !Sub
                - arn:aws:s3:::elasticbeanstalk-${Region}-*/*
                - { Region: !FindInMap [EnvironmentMap, !Ref DeployEnv, DeployRegion]}
          - Action:
              - elasticloadbalancing:DescribeInstanceHealth
              - elasticloadbalancing:DescribeTargetGroups
              - elasticloadbalancing:DeregisterInstancesFromLoadBalancer
              - elasticloadbalancing:RegisterInstancesWithLoadBalancer
              - elasticloadbalancing:RegisterTargets
            Effect: Allow
            Resource: "*"
      Users:
        - !Ref DeployUser

Outputs:
  DeployBucket:
    Value: !Ref DeployBucket
    Description: Deploy bucket
  DeployUserAccessKey:
    Value: !Ref DeployUserAccessKey
    Description: Access key of the user who may upload files into the S3
  DeployUserSecretAccessKey:
    Value: !GetAtt DeployUserAccessKey.SecretAccessKey
    Description: Secret key of the user who may upload files into the S3
